@using Microsoft.Security.Application
@model IEnumerable<SecurityExercise.Models.Stock>

@{

    ViewBag.Title = "Index";

}

<h2>Filtered Results for @Encoder.JavaScriptEncode(ViewBag.FilterName)</h2>


<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Code)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { stockCode = item.Code }) |
                @Html.ActionLink("Detail", "Detail", new { stockCode = item.Code }) |
                @Html.ActionLink("Delete", "Delete", new { stockCode = item.Code })
            </td>
        </tr>
    }

</table>

@section scripts {
    <script>

        $(document).ready(function() {
            var filterName = '@Html.Raw(ViewBag.FilterName)';
           /* var encodedFilterName = Encoder.JavaScriptEncode(filterName);*/
            $("h2").append(" filtered by '" + encodedfilterName + "'");

        });


    </script>

}
